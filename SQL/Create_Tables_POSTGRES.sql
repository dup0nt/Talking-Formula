-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.auth_group
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_group_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.auth_group_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    group_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.auth_permission
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
    CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename)
);

CREATE TABLE IF NOT EXISTS public.auth_user
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    CONSTRAINT auth_user_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.auth_user_groups
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id)
);

CREATE TABLE IF NOT EXISTS public.auth_user_user_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.circuito
(
    circuitoid integer NOT NULL DEFAULT nextval('circuito_circuitoid_seq'::regclass),
    nome character varying(512) COLLATE pg_catalog."default",
    criadoem date,
    comprimento double precision,
    curvas integer,
    foto character varying(512) COLLATE pg_catalog."default",
    CONSTRAINT circuito_pkey PRIMARY KEY (circuitoid)
);

CREATE TABLE IF NOT EXISTS public.comentario
(
    comentarioid integer NOT NULL DEFAULT nextval('comentario_comentarioid_seq'::regclass),
    nome character varying(80) COLLATE pg_catalog."default" NOT NULL,
    corpo character varying(2000) COLLATE pg_catalog."default" NOT NULL,
    criadoem date NOT NULL,
    noticia_noticiaid integer NOT NULL,
    CONSTRAINT comentario_pkey PRIMARY KEY (comentarioid, noticia_noticiaid)
);

CREATE TABLE IF NOT EXISTS public.construtor
(
    construtorid bigint NOT NULL DEFAULT nextval('construtor_construtorid_seq'::regclass),
    nome character varying(512) COLLATE pg_catalog."default",
    nacionalidade character varying(512) COLLATE pg_catalog."default",
    logo character varying(512) COLLATE pg_catalog."default",
    criadoem date,
    CONSTRAINT construtor_pkey PRIMARY KEY (construtorid)
);

CREATE TABLE IF NOT EXISTS public.corrida
(
    ronda integer NOT NULL DEFAULT nextval('corrida_ronda_seq'::regclass),
    nome character varying(512) COLLATE pg_catalog."default" NOT NULL,
    voltas integer,
    ocorreem date,
    horas character varying(512) COLLATE pg_catalog."default" NOT NULL,
    temperatura integer,
    temperaturacircuito integer,
    precipitacao integer,
    humidade integer,
    exposicaosolar integer,
    epoca_ano integer NOT NULL,
    circuito_circuitoid integer NOT NULL,
    CONSTRAINT corrida_pkey PRIMARY KEY (ronda)
);

CREATE TABLE IF NOT EXISTS public.django_admin_log
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    action_time timestamp with time zone NOT NULL,
    object_id text COLLATE pg_catalog."default",
    object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
    action_flag smallint NOT NULL,
    change_message text COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_content_type
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_content_type_pkey PRIMARY KEY (id),
    CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
);

CREATE TABLE IF NOT EXISTS public.django_migrations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    app character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    applied timestamp with time zone NOT NULL,
    CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_session
(
    session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    session_data text COLLATE pg_catalog."default" NOT NULL,
    expire_date timestamp with time zone NOT NULL,
    CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);

CREATE TABLE IF NOT EXISTS public.epoca
(
    ano integer NOT NULL,
    CONSTRAINT epoca_pkey PRIMARY KEY (ano)
);

CREATE TABLE IF NOT EXISTS public.equipa
(
    equipaid bigint NOT NULL DEFAULT nextval('equipa_equipaid_seq'::regclass),
    chefe character varying(512) COLLATE pg_catalog."default",
    chefetecnico character varying(512) COLLATE pg_catalog."default",
    chassis character varying(512) COLLATE pg_catalog."default",
    foto_carro character varying(512) COLLATE pg_catalog."default",
    construtor_construtorid bigint NOT NULL,
    epoca_ano integer NOT NULL,
    CONSTRAINT equipa_pkey PRIMARY KEY (equipaid, construtor_construtorid)
);

CREATE TABLE IF NOT EXISTS public.noticia
(
    noticiaid integer NOT NULL DEFAULT nextval('noticia_noticiaid_seq'::regclass),
    titulo character varying(50) COLLATE pg_catalog."default" NOT NULL,
    corpo character varying(5000) COLLATE pg_catalog."default",
    foto character varying(512) COLLATE pg_catalog."default" NOT NULL,
    criadoem date NOT NULL,
    CONSTRAINT noticia_pkey PRIMARY KEY (noticiaid)
);

CREATE TABLE IF NOT EXISTS public.piloto
(
    pilotoid integer NOT NULL DEFAULT nextval('piloto_pilotoid_seq'::regclass),
    nome character varying(512) COLLATE pg_catalog."default",
    nacionalidade character varying(512) COLLATE pg_catalog."default",
    nascimento date,
    foto character varying(512) COLLATE pg_catalog."default",
    CONSTRAINT piloto_pkey PRIMARY KEY (pilotoid)
);

CREATE TABLE IF NOT EXISTS public.piloto_equipa
(
    piloto_pilotoid integer NOT NULL,
    equipa_equipaid bigint NOT NULL,
    equipa_construtor_construtorid bigint NOT NULL,
    CONSTRAINT piloto_equipa_pkey PRIMARY KEY (piloto_pilotoid, equipa_equipaid, equipa_construtor_construtorid)
);

CREATE TABLE IF NOT EXISTS public.resultado
(
    resultadoid integer NOT NULL DEFAULT nextval('resultado_resultadoid_seq'::regclass),
    posinicio integer NOT NULL,
    tempototal integer NOT NULL,
    voltarapida integer NOT NULL,
    posfinal integer NOT NULL,
    corrida_ronda integer NOT NULL,
    piloto_pilotoid integer NOT NULL,
    CONSTRAINT resultado_pkey PRIMARY KEY (resultadoid, posinicio, posfinal, corrida_ronda, piloto_pilotoid)
);

CREATE TABLE IF NOT EXISTS public.resultado_pontos
(
    posfinal integer NOT NULL DEFAULT nextval('resultado_pontos_posfinal_seq'::regclass),
    pontos integer NOT NULL,
    CONSTRAINT resultado_pontos_pkey PRIMARY KEY (posfinal)
);

CREATE TABLE IF NOT EXISTS public.resultados
(
    resultadoid integer NOT NULL DEFAULT nextval('resultados_resultadoid_seq'::regclass),
    posinicio integer NOT NULL,
    posfinal integer,
    tempototal integer,
    voltarapida integer,
    corrida_ronda integer NOT NULL,
    piloto_pilotoid integer NOT NULL,
    CONSTRAINT resultados_pkey PRIMARY KEY (resultadoid, corrida_ronda, piloto_pilotoid)
);

ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e
    ON public.auth_group_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9
    ON public.auth_group_permissions(group_id);


ALTER TABLE IF EXISTS public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b
    ON public.auth_permission(content_type_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_group_id_97559544
    ON public.auth_user_groups(group_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_user_id_6a12ed8b
    ON public.auth_user_groups(user_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c
    ON public.auth_user_user_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b
    ON public.auth_user_user_permissions(user_id);


ALTER TABLE IF EXISTS public.comentario
    ADD CONSTRAINT comentario_fk1 FOREIGN KEY (noticia_noticiaid)
    REFERENCES public.noticia (noticiaid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.corrida
    ADD CONSTRAINT corrida_fk1 FOREIGN KEY (epoca_ano)
    REFERENCES public.epoca (ano) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.corrida
    ADD CONSTRAINT corrida_fk2 FOREIGN KEY (circuito_circuitoid)
    REFERENCES public.circuito (circuitoid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb
    ON public.django_admin_log(content_type_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6
    ON public.django_admin_log(user_id);


ALTER TABLE IF EXISTS public.equipa
    ADD CONSTRAINT equipa_fk1 FOREIGN KEY (construtor_construtorid)
    REFERENCES public.construtor (construtorid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.equipa
    ADD CONSTRAINT equipa_fk2 FOREIGN KEY (epoca_ano)
    REFERENCES public.epoca (ano) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.piloto_equipa
    ADD CONSTRAINT piloto_equipa_fk1 FOREIGN KEY (piloto_pilotoid)
    REFERENCES public.piloto (pilotoid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.piloto_equipa
    ADD CONSTRAINT piloto_equipa_fk2 FOREIGN KEY (equipa_construtor_construtorid, equipa_equipaid)
    REFERENCES public.equipa (construtor_construtorid, equipaid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resultado
    ADD CONSTRAINT resultado_fk1 FOREIGN KEY (posfinal)
    REFERENCES public.resultado_pontos (posfinal) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resultado
    ADD CONSTRAINT resultado_fk2 FOREIGN KEY (corrida_ronda)
    REFERENCES public.corrida (ronda) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resultado
    ADD CONSTRAINT resultado_fk3 FOREIGN KEY (piloto_pilotoid)
    REFERENCES public.piloto (pilotoid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resultados
    ADD CONSTRAINT resultados_fk1 FOREIGN KEY (corrida_ronda)
    REFERENCES public.corrida (ronda) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resultados
    ADD CONSTRAINT resultados_fk2 FOREIGN KEY (piloto_pilotoid)
    REFERENCES public.piloto (pilotoid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;